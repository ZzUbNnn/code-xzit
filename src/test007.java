import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.ArrayList;import java.util.Collections;/** * @param * @author Administrator * @date 2021/3/26 0026 20:16 * @throws Exception */public class test007 {    /**     * 定义三个属性 月饼的库存，总售价和最大需求值*     **/    static class moonCake implements Comparable<moonCake>{        double amout;        double price;        double value;        /**         * 构造方法         **/        public moonCake(double amout, double price, double value) {            this.amout = amout;            this.price = price;            this.value = value;        }        /**         * 重写comparaTo方法         **/        @Override        public int compareTo(moonCake o) {            return value > o.value?-1:1;        }    }    public static void main(String[] args) throws IOException {        /**         * 处理输入流         **/        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        String[] str = br.readLine().split(" ");        int n = Integer.parseInt(str[0]);        int m = Integer.parseInt(str[1]);        ArrayList<moonCake> list = new ArrayList<moonCake>();        String[] strings = br.readLine().split(" "),pr = br.readLine().split(" ");        /**         * 进行排序，经过处理后的数据更加好计算         **/        for(int i=0;i<n;i++){            double t1 = Double.parseDouble(strings[i]);            double t2 = Double.parseDouble(pr[i]);            double value =t2/t1;            list.add(new moonCake(t1,t2,value));        }        Collections.sort(list);        double sum=0;        for(int i=0;i<n;i++){            if(m-list.get(i).amout>=0){                sum+=list.get(i).price;                m-=list.get(i).amout;            }else{                sum+=list.get(i).value*m;                break;            }        }        System.out.println(String.format("%.2f", sum));    }}